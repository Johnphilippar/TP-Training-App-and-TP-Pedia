{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JPPAR\\\\Desktop\\\\React\\\\teleperformance\\\\tp-pedia\\\\owl-trainings-schedule\\\\src\\\\components\\\\training\\\\FormNewTrainingComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as apiTraining from '../../API/trainingAPI';\n\nclass FormNewTrainingComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formData: {\n        title: \"\",\n        description: \"\",\n        prerequisite: \"\",\n        image: null\n      },\n      trainingList: []\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    apiTraining.getTrainingList().then(result => {\n      this.setState({\n        trainingList: result.data\n      });\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  handleSubmit(data) {\n    const fd = new FormData();\n    fd.append(\"Training_Title\", data.title);\n    fd.append(\"Training_Details\", data.description);\n    fd.append(\"formFile\", data.image, data.image.name);\n\n    if (data.prerequisite != \"\") {\n      fd.append(\"PrerequisiteID\", `{${data.prerequisite}}`);\n    }\n\n    for (var pair of fd.entries()) {\n      console.log(pair[0] + ', ' + pair[1]);\n    }\n\n    apiTraining.postTraining(fd).then(result => {\n      alert(`${data.title} is submitted`);\n    }).catch(e => console.log(e.message));\n    this.props.close();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nexport default FormNewTrainingComponent;","map":{"version":3,"sources":["C:/Users/JPPAR/Desktop/React/teleperformance/tp-pedia/owl-trainings-schedule/src/components/training/FormNewTrainingComponent.jsx"],"names":["React","Component","Formik","Form","Field","ErrorMessage","apiTraining","FormNewTrainingComponent","constructor","props","state","formData","title","description","prerequisite","image","trainingList","handleSubmit","bind","componentDidMount","getTrainingList","then","result","setState","data","catch","e","console","log","fd","FormData","append","name","pair","entries","postTraining","alert","message","close","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,OAAO,KAAKC,WAAZ,MAA6B,uBAA7B;;AAGA,MAAMC,wBAAN,SAAuCN,SAAvC,CAAiD;AAE7CO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,KAAK,EAAE,EADD;AAENC,QAAAA,WAAW,EAAE,EAFP;AAGNC,QAAAA,YAAY,EAAE,EAHR;AAINC,QAAAA,KAAK,EAAE;AAJD,OADD;AAOTC,MAAAA,YAAY,EAAE;AAPL,KAAb;AAUA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBb,IAAAA,WAAW,CAACc,eAAZ,GAA8BC,IAA9B,CAAmCC,MAAM,IAAI;AACzC,WAAKC,QAAL,CAAc;AAAEP,QAAAA,YAAY,EAAEM,MAAM,CAACE;AAAvB,OAAd;AACH,KAFD,EAEGC,KAFH,CAESC,CAAC,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH,KAJD;AAKH;;AAEDT,EAAAA,YAAY,CAACO,IAAD,EAAO;AACf,UAAMK,EAAE,GAAG,IAAIC,QAAJ,EAAX;AACAD,IAAAA,EAAE,CAACE,MAAH,CAAU,gBAAV,EAA4BP,IAAI,CAACZ,KAAjC;AACAiB,IAAAA,EAAE,CAACE,MAAH,CAAU,kBAAV,EAA8BP,IAAI,CAACX,WAAnC;AACAgB,IAAAA,EAAE,CAACE,MAAH,CAAU,UAAV,EAAsBP,IAAI,CAACT,KAA3B,EAAkCS,IAAI,CAACT,KAAL,CAAWiB,IAA7C;;AACA,QAAIR,IAAI,CAACV,YAAL,IAAqB,EAAzB,EAA6B;AACzBe,MAAAA,EAAE,CAACE,MAAH,CAAU,gBAAV,EAA6B,IAAGP,IAAI,CAACV,YAAa,GAAlD;AACH;;AACD,SAAK,IAAImB,IAAT,IAAiBJ,EAAE,CAACK,OAAH,EAAjB,EAA+B;AAC3BP,MAAAA,OAAO,CAACC,GAAR,CAAYK,IAAI,CAAC,CAAD,CAAJ,GAAU,IAAV,GAAiBA,IAAI,CAAC,CAAD,CAAjC;AACH;;AACD3B,IAAAA,WAAW,CAAC6B,YAAZ,CAAyBN,EAAzB,EAA6BR,IAA7B,CAAkCC,MAAM,IAAI;AACxCc,MAAAA,KAAK,CAAE,GAAEZ,IAAI,CAACZ,KAAM,eAAf,CAAL;AACH,KAFD,EAEGa,KAFH,CAESC,CAAC,IAAIC,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACW,OAAd,CAFd;AAGA,SAAK5B,KAAL,CAAW6B,KAAX;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAKH;;AAhD4C;;AAoDjD,eAAehC,wBAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as apiTraining from '../../API/trainingAPI';\r\n\r\n\r\nclass FormNewTrainingComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formData: {\r\n                title: \"\",\r\n                description: \"\",\r\n                prerequisite: \"\",\r\n                image: null\r\n            },\r\n            trainingList: [],\r\n        }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        apiTraining.getTrainingList().then(result => {\r\n            this.setState({ trainingList: result.data })\r\n        }).catch(e => {\r\n            console.log(e)\r\n        })\r\n    }\r\n\r\n    handleSubmit(data) {\r\n        const fd = new FormData();\r\n        fd.append(\"Training_Title\", data.title);\r\n        fd.append(\"Training_Details\", data.description);\r\n        fd.append(\"formFile\", data.image, data.image.name);\r\n        if (data.prerequisite != \"\") {\r\n            fd.append(\"PrerequisiteID\", `{${data.prerequisite}}`);\r\n        }\r\n        for (var pair of fd.entries()) {\r\n            console.log(pair[0] + ', ' + pair[1]);\r\n        }\r\n        apiTraining.postTraining(fd).then(result => {\r\n            alert(`${data.title} is submitted`);\r\n        }).catch(e => console.log(e.message));\r\n        this.props.close()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default FormNewTrainingComponent;"]},"metadata":{},"sourceType":"module"}