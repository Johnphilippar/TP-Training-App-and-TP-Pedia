{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JPPAR\\\\Desktop\\\\React\\\\teleperformance\\\\tp-pedia\\\\owl-trainings-schedule\\\\src\\\\views\\\\CalendarComponent.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport './CalendarComponent.scss';\nimport { CalendarModalComponent } from '../components/Calendar/CalendarModalComponent';\nimport Axios from 'axios';\nimport moment from 'moment';\nimport config from '../../package.json';\nimport { get } from '../../node_modules/react-hook-form';\n\nfunction CalendarComponent() {\n  const [modalShow, setModalShow] = useState(false);\n  const [startMonth, setStartMonth] = useState(moment().format('MMMM YYYY'));\n  const [getSelectedDate, setSelectedDate] = useState(moment(\"2020-10-29\").format('MMMM DD, YYYY'));\n  const [calendarDate, setCalendarDate] = useState([]);\n\n  const getCalendarDate = yearMonth => {\n    Axios.get(config.configuration.APITrainings + \"/Calendar/\" + yearMonth + \"-10\").then(result => {\n      setCalendarDate(result.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  useEffect(() => {\n    getCalendarDate(startMonth);\n  }, []);\n\n  const getScheduledTraining = day => {\n    let scheduleConten = [];\n\n    if (calendarDate) {\n      if (calendarDate[day]) {\n        let obj = JSON.parse(JSON.stringify(calendarDate[day])).Schedules;\n\n        for (let sc = 0; sc < obj.length; sc++) {\n          scheduleConten.push( /*#__PURE__*/React.createElement(\"div\", {\n            className: \"li-sched-green\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"li\", {\n            className: \"training\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }\n          }, obj[sc].TRAINING_TITLE), /*#__PURE__*/React.createElement(\"li\", {\n            className: \"time\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }\n          }, moment(obj[sc].TIME_START).format(\"h:mm a\") + \" - \" + moment(obj[sc].TIME_END).format(\"h:mm a\"))));\n        }\n      }\n    }\n\n    return scheduleConten;\n  };\n\n  const getDayContainerItem = cdate => {\n    let dateObject = JSON.parse(JSON.stringify(cdate));\n    let day = moment(dateObject.date).format(\"DD\");\n    let result = [];\n\n    if (day == \"01\") {\n      let start = moment(dateObject.date).format('YYYY-MM-DD');\n      let dayAWeek = moment(start).day();\n\n      for (let i = 0; i < dayAWeek; i++) {\n        result.push( /*#__PURE__*/React.createElement(\"div\", {\n          className: \"number\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }\n        }));\n      }\n    }\n\n    result.push( /*#__PURE__*/React.createElement(\"div\", {\n      className: \"number\",\n      onClick: () => {\n        setModalShow(true);\n        setSelectedDate(moment(dateObject.date).format('MMMM DD, YYYY'));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 22\n      }\n    }, day, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }\n    }, getScheduledTraining(parseInt(day) - 1))));\n    return result;\n  };\n\n  const moveToNextMonth = () => {\n    let newSelectedYearMonth = moment(startMonth).add(1, 'month').format('MMMM YYYY');\n    setStartMonth(newSelectedYearMonth);\n    getCalendarDate(moment(newSelectedYearMonth).format(\"YYYY-MM\"));\n  };\n\n  const moveToPreviousMonth = () => {\n    let newSelectedYearMonth = moment(startMonth).subtract(1, 'month').format('MMMM YYYY');\n    setStartMonth(newSelectedYearMonth);\n    getCalendarDate(moment(newSelectedYearMonth).format(\"YYYY-MM\"));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calendar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"month-week\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, \"Calendar\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"border-btm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"m-w\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"month\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    class: \"material-icons\",\n    onClick: moveToPreviousMonth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 33\n    }\n  }, \"keyboard_arrow_left\")), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 29\n    }\n  }, startMonth), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    class: \"material-icons\",\n    onClick: moveToNextMonth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 33\n    }\n  }, \"keyboard_arrow_right\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"week\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, \"SUNDAY\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, \"MONDAY\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, \"TUESDAY\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }, \"WEDNESDAY\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }, \"THURSDAY\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }, \"FRIDAY\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, \"SATURDAY\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, calendarDate.map(cdate => getDayContainerItem(cdate))), modalShow && /*#__PURE__*/React.createElement(CalendarModalComponent, {\n    setModalShow: setModalShow,\n    getSelectedDate: getSelectedDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 31\n    }\n  }));\n}\n\nexport default CalendarComponent;","map":{"version":3,"sources":["C:/Users/JPPAR/Desktop/React/teleperformance/tp-pedia/owl-trainings-schedule/src/views/CalendarComponent.jsx"],"names":["React","useState","useEffect","CalendarModalComponent","Axios","moment","config","get","CalendarComponent","modalShow","setModalShow","startMonth","setStartMonth","format","getSelectedDate","setSelectedDate","calendarDate","setCalendarDate","getCalendarDate","yearMonth","configuration","APITrainings","then","result","data","catch","e","console","log","getScheduledTraining","day","scheduleConten","obj","JSON","parse","stringify","Schedules","sc","length","push","TRAINING_TITLE","TIME_START","TIME_END","getDayContainerItem","cdate","dateObject","date","start","dayAWeek","i","parseInt","moveToNextMonth","newSelectedYearMonth","add","moveToPreviousMonth","subtract","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './CalendarComponent.scss' ;\r\nimport { CalendarModalComponent } from '../components/Calendar/CalendarModalComponent';\r\nimport Axios from 'axios'\r\nimport moment from 'moment';\r\nimport config from '../../package.json';\r\nimport { get } from '../../node_modules/react-hook-form';\r\n    \r\nfunction CalendarComponent() {\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [startMonth, setStartMonth] = useState(moment().format('MMMM YYYY'));\r\n    const [getSelectedDate, setSelectedDate] = useState(moment(\"2020-10-29\").format('MMMM DD, YYYY'));\r\n    const [calendarDate, setCalendarDate] = useState([]);\r\n\r\n    const getCalendarDate = (yearMonth) =>{ \r\n        Axios.get(config.configuration.APITrainings + \"/Calendar/\"+yearMonth+\"-10\").then(result => { \r\n            setCalendarDate(result.data);\r\n\r\n        }).catch(e => {\r\n            console.log(e);\r\n        }); \r\n    }\r\n    \r\n\r\n    useEffect(()=>{\r\n        getCalendarDate(startMonth);\r\n    },[])\r\n\r\n    \r\n     \r\n    const getScheduledTraining = (day) => { \r\n        let scheduleConten = [];\r\n        if(calendarDate){\r\n            if(calendarDate[day]){\r\n                let obj = JSON.parse(JSON.stringify(calendarDate[day])).Schedules; \r\n                for(let sc=0; sc<obj.length; sc++){\r\n                    scheduleConten.push(\r\n                        <div className=\"li-sched-green\">\r\n                            <li className=\"training\">{obj[sc].TRAINING_TITLE}</li>\r\n                            <li className=\"time\">{moment(obj[sc].TIME_START).format(\"h:mm a\") + \" - \" + moment(obj[sc].TIME_END).format(\"h:mm a\")}</li>\r\n                        </div> \r\n                    );\r\n                }\r\n            }\r\n        }\r\n        return scheduleConten;\r\n    }\r\n\r\n    const getDayContainerItem  = (cdate) => {\r\n        let dateObject = JSON.parse(JSON.stringify(cdate));\r\n        let day = moment(dateObject.date).format(\"DD\");\r\n        let result = [];\r\n        if(day == \"01\"){\r\n\r\n            let start = moment(dateObject.date).format('YYYY-MM-DD');\r\n            let dayAWeek = moment(start).day();  \r\n            for(let i = 0; i < dayAWeek; i++){\r\n                result.push(<div className=\"number\"></div>);\r\n            } \r\n        }\r\n\r\n         result.push(<div className=\"number\" onClick={()=>{\r\n                        setModalShow(true)\r\n                        setSelectedDate(moment(dateObject.date).format('MMMM DD, YYYY'))\r\n                    }}>{day}  \r\n                        <ul>\r\n                                {\r\n                                   getScheduledTraining(parseInt(day) - 1)  \r\n                                }\r\n                        </ul> \r\n                    </div>)\r\n        return result;\r\n    }\r\n\r\n    \r\n    const moveToNextMonth = () => {\r\n        let newSelectedYearMonth  = moment(startMonth).add(1, 'month').format('MMMM YYYY');\r\n        setStartMonth(newSelectedYearMonth);\r\n        getCalendarDate(moment(newSelectedYearMonth).format(\"YYYY-MM\"));   \r\n    }\r\n\r\n    const moveToPreviousMonth = () => {\r\n        let newSelectedYearMonth  = moment(startMonth).subtract(1, 'month').format('MMMM YYYY');\r\n        setStartMonth(newSelectedYearMonth);\r\n        getCalendarDate(moment(newSelectedYearMonth).format(\"YYYY-MM\"));  \r\n    }\r\n\r\n    return(\r\n        <div className=\"calendar\">\r\n                <div className=\"month-week\">\r\n                    <h1>Calendar</h1>\r\n                    <div className=\"border-btm\"></div>\r\n                    <br/>\r\n                    <div className=\"m-w\"> \r\n                        <div className=\"month\">\r\n                            <button type=\"button\">\r\n                                <span class=\"material-icons\" onClick={moveToPreviousMonth}>keyboard_arrow_left</span>\r\n                            </button>\r\n                            <span>{startMonth}</span>\r\n                            <button type=\"button\">\r\n                                <span class=\"material-icons\" onClick={moveToNextMonth}>keyboard_arrow_right</span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"week\">\r\n                    \r\n                    <span>SUNDAY</span>\r\n                    <span>MONDAY</span>\r\n                    <span>TUESDAY</span>\r\n                    <span>WEDNESDAY</span>\r\n                    <span>THURSDAY</span>\r\n                    <span>FRIDAY</span>\r\n                    <span>SATURDAY</span>\r\n                </div>\r\n                <div className=\"date\">\r\n                        {\r\n                            calendarDate.map(\r\n                                cdate => getDayContainerItem(cdate)\r\n                            ) \r\n                        }\r\n                </div>\r\n\r\n                {modalShow && <CalendarModalComponent  setModalShow = {setModalShow} getSelectedDate = {getSelectedDate} />  }\r\n         </div>\r\n    )\r\n}\r\n\r\n \r\nexport default CalendarComponent;\r\n\r\n                        "]},"metadata":{},"sourceType":"module"}