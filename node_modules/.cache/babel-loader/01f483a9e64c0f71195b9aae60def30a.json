{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JPPAR\\\\Desktop\\\\React\\\\teleperformance\\\\tp-pedia\\\\owl-trainings-schedule\\\\src\\\\components\\\\training\\\\FormNewTrainingComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as apiTraining from '../../API/trainingAPI';\n\nclass FormNewTrainingComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formData: {\n        title: \"\",\n        description: \"\",\n        prerequisite: \"\",\n        image: null\n      },\n      trainingList: []\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    apiTraining.getTrainingList().then(result => {\n      this.setState({\n        trainingList: result.data\n      });\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  handleSubmit(data) {\n    const fd = new FormData();\n    fd.append(\"Training_Title\", data.title);\n    fd.append(\"Training_Details\", data.description);\n    fd.append(\"formFile\", data.image, data.image.name);\n\n    if (data.prerequisite != \"\") {\n      fd.append(\"PrerequisiteID\", `{${data.prerequisite}}`);\n    }\n\n    for (var pair of fd.entries()) {\n      console.log(pair[0] + ', ' + pair[1]);\n    }\n\n    apiTraining.postTraining(fd).then(result => {\n      alert(`${data.title} is submitted`);\n    }).catch(e => console.log(e.message));\n    this.props.close();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"add-new-trainings-modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: image,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"add-trainings-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"add-trainings-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }, \"Trainings Information\")), /*#__PURE__*/React.createElement(Formik, {\n      initialValues: this.state.formData,\n      onSubmit: values => this.handleSubmit(values),\n      validateOnChange: true,\n      validateOnBlur: false //   validationSchema={ReviewSchema}\n      ,\n      enableReinitialize: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, formProps => /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      type: \"text\",\n      name: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 37\n      }\n    }, \"Training Title\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      as: \"select\",\n      name: \"prerequisite\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 41\n      }\n    }), this.state.trainingList.map(list => /*#__PURE__*/React.createElement(\"option\", {\n      value: list.ID,\n      key: list.ID,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 45\n      }\n    }, list.TRAINING_TITLE))), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 37\n      }\n    }, \"Training Prerequisite\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      type: \"file\",\n      name: \"image\",\n      value: this.state.formData.image,\n      onChange: e => {\n        formProps.setFieldValue(\"image\", e.target.files[0]);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 37\n      }\n    }, \"Training Image\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      type: \"text\",\n      name: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 37\n      }\n    }, \"Training Description\")), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 37\n      }\n    }, \"SUBMIT\")), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.props.close,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 37\n      }\n    }, \"CLOSE\"))))));\n  }\n\n}\n\nexport default FormNewTrainingComponent;","map":{"version":3,"sources":["C:/Users/JPPAR/Desktop/React/teleperformance/tp-pedia/owl-trainings-schedule/src/components/training/FormNewTrainingComponent.jsx"],"names":["React","Component","Formik","Form","Field","ErrorMessage","apiTraining","FormNewTrainingComponent","constructor","props","state","formData","title","description","prerequisite","image","trainingList","handleSubmit","bind","componentDidMount","getTrainingList","then","result","setState","data","catch","e","console","log","fd","FormData","append","name","pair","entries","postTraining","alert","message","close","render","values","formProps","map","list","ID","TRAINING_TITLE","setFieldValue","target","files"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as apiTraining from '../../API/trainingAPI';\r\n\r\n\r\nclass FormNewTrainingComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formData: {\r\n                title: \"\",\r\n                description: \"\",\r\n                prerequisite: \"\",\r\n                image: null\r\n            },\r\n            trainingList: [],\r\n        }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        apiTraining.getTrainingList().then(result => {\r\n            this.setState({ trainingList: result.data })\r\n        }).catch(e => {\r\n            console.log(e)\r\n        })\r\n    }\r\n\r\n    handleSubmit(data) {\r\n        const fd = new FormData();\r\n        fd.append(\"Training_Title\", data.title);\r\n        fd.append(\"Training_Details\", data.description);\r\n        fd.append(\"formFile\", data.image, data.image.name);\r\n        if (data.prerequisite != \"\") {\r\n            fd.append(\"PrerequisiteID\", `{${data.prerequisite}}`);\r\n        }\r\n        for (var pair of fd.entries()) {\r\n            console.log(pair[0] + ', ' + pair[1]);\r\n        }\r\n        apiTraining.postTraining(fd).then(result => {\r\n            alert(`${data.title} is submitted`);\r\n        }).catch(e => console.log(e.message));\r\n        this.props.close()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"add-new-trainings-modal\">\r\n                <img src={image} alt=\"\"/>\r\n                <div className=\"add-trainings-form\">\r\n                    <div className=\"add-trainings-title\">\r\n                        <h4>Trainings Information</h4>\r\n                    </div>\r\n                    <Formik initialValues={this.state.formData}\r\n                    onSubmit={(values) => this.handleSubmit(values)}\r\n                    validateOnChange={true}\r\n                    validateOnBlur={false}\r\n                    //   validationSchema={ReviewSchema}\r\n                    enableReinitialize={true}\r\n                >\r\n                    {\r\n                        (formProps) => (\r\n                            <Form>\r\n                                <div className=\"form-group\">\r\n                                    <Field type=\"text\" name=\"title\" />\r\n                                    <label>Training Title</label>\r\n                                </div>\r\n\r\n                                <div >\r\n                                    <Field as=\"select\" name=\"prerequisite\" >\r\n                                        <option value=\"\"></option>\r\n                                        {this.state.trainingList.map((list) =>\r\n                                            <option value={list.ID} key={list.ID}>{list.TRAINING_TITLE}</option>\r\n                                        )}\r\n                                    </Field>\r\n                                    <label>Training Prerequisite</label>\r\n                                </div>\r\n\r\n                                <div >\r\n                                    <Field type=\"file\" name=\"image\" value={this.state.formData.image} onChange={(e) => {\r\n                                        formProps.setFieldValue(\"image\", e.target.files[0])\r\n                                    }} />\r\n                                    <label>Training Image</label>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <Field type=\"text\" name=\"description\" />\r\n                                    <label>Training Description</label>\r\n                                </div>\r\n                                <button type=\"submit\">\r\n                                    <p>SUBMIT</p>\r\n                                </button>\r\n                                <button type=\"button\" onClick={this.props.close}>\r\n                                    <p>CLOSE</p>\r\n                                </button>\r\n                            </Form>\r\n                        )\r\n                    }\r\n                </Formik>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default FormNewTrainingComponent;"]},"metadata":{},"sourceType":"module"}