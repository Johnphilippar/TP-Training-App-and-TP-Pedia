{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JPPAR\\\\Desktop\\\\React\\\\teleperformance\\\\tp-pedia\\\\owl-trainings-schedule\\\\src\\\\components\\\\training\\\\FormEditTrainingComponent.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport config from '../../../package.json';\nimport * as apiTraining from '../../API/trainingAPI';\nexport default function FormEditTrainingComponent(props) {\n  var _props$trn, _props$trn$Details, _props$trn2, _props$trn2$Details, _props$trn3, _props$trn3$Details, _props$trn4, _props$trn4$Details, _props$trn$Prerequisi;\n\n  const [editFormData, setEditFormData] = useState({\n    Training_Id: props === null || props === void 0 ? void 0 : (_props$trn = props.trn) === null || _props$trn === void 0 ? void 0 : (_props$trn$Details = _props$trn.Details) === null || _props$trn$Details === void 0 ? void 0 : _props$trn$Details.ID,\n    Training_Title: props === null || props === void 0 ? void 0 : (_props$trn2 = props.trn) === null || _props$trn2 === void 0 ? void 0 : (_props$trn2$Details = _props$trn2.Details) === null || _props$trn2$Details === void 0 ? void 0 : _props$trn2$Details.TRAINING_TITLE,\n    Training_Details: props === null || props === void 0 ? void 0 : (_props$trn3 = props.trn) === null || _props$trn3 === void 0 ? void 0 : (_props$trn3$Details = _props$trn3.Details) === null || _props$trn3$Details === void 0 ? void 0 : _props$trn3$Details.TRAINING_DETAILS,\n    Status: props === null || props === void 0 ? void 0 : (_props$trn4 = props.trn) === null || _props$trn4 === void 0 ? void 0 : (_props$trn4$Details = _props$trn4.Details) === null || _props$trn4$Details === void 0 ? void 0 : _props$trn4$Details.STATUS,\n    formFile: null,\n    PrerequisiteId: props === null || props === void 0 ? void 0 : (_props$trn$Prerequisi = props.trn.Prerequisite[0]) === null || _props$trn$Prerequisi === void 0 ? void 0 : _props$trn$Prerequisi.ID\n  });\n\n  const handleEdit = data => {\n    console.log(data);\n    const fd = new FormData();\n    fd.append(\"Training_Id\", `{${editFormData.Training_Id}}`);\n    fd.append(\"Training_Title\", data.Training_Title);\n    fd.append(\"Training_Details\", data.Training_Details);\n    fd.append(\"Status\", data.Status);\n    console.log(data.formFile);\n\n    if (data.formFile) {\n      console.log('triggered');\n      fd.append(\"formFile\", data.formFile, data.formFile.name);\n    }\n\n    if (data.PrerequisiteId) {\n      fd.append(\"PrerequisiteId\", `{${data.PrerequisiteId}}`);\n      console.log('triggered');\n    }\n\n    for (var pair of fd.entries()) {\n      console.log(pair[0] + ', ' + pair[1]);\n    }\n\n    apiTraining.putTraining(fd).then(result => {\n      alert(`${data.Training_Title} is updated`);\n    }).catch(e => console.log(e.message));\n    props.closeModal();\n  };\n\n  const [trainingList, setTrainingList] = useState([]);\n\n  const getTrainingList = () => {\n    apiTraining.getTrainingList().then(result => {\n      setTrainingList(result.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  useEffect(() => {\n    getTrainingList();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-new-training-modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/JPPAR/Desktop/React/teleperformance/tp-pedia/owl-trainings-schedule/src/components/training/FormEditTrainingComponent.jsx"],"names":["React","useState","useEffect","Formik","Form","Field","ErrorMessage","config","apiTraining","FormEditTrainingComponent","props","editFormData","setEditFormData","Training_Id","trn","Details","ID","Training_Title","TRAINING_TITLE","Training_Details","TRAINING_DETAILS","Status","STATUS","formFile","PrerequisiteId","Prerequisite","handleEdit","data","console","log","fd","FormData","append","name","pair","entries","putTraining","then","result","alert","catch","e","message","closeModal","trainingList","setTrainingList","getTrainingList"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport config from '../../../package.json';\r\nimport * as apiTraining from '../../API/trainingAPI';\r\n\r\nexport default function FormEditTrainingComponent(props) {\r\n    const [editFormData, setEditFormData] = useState({\r\n        Training_Id: props?.trn?.Details?.ID,\r\n        Training_Title: props?.trn?.Details?.TRAINING_TITLE,\r\n        Training_Details: props?.trn?.Details?.TRAINING_DETAILS,\r\n        Status: props?.trn?.Details?.STATUS,\r\n        formFile: null,\r\n        PrerequisiteId: props?.trn.Prerequisite[0]?.ID\r\n    })\r\n\r\n    const handleEdit = (data) => {\r\n        console.log(data)\r\n        const fd = new FormData();\r\n        fd.append(\"Training_Id\", `{${editFormData.Training_Id}}`);\r\n        fd.append(\"Training_Title\", data.Training_Title);\r\n        fd.append(\"Training_Details\", data.Training_Details);\r\n        fd.append(\"Status\", data.Status);\r\n\r\n        console.log(data.formFile)\r\n        if (data.formFile) {\r\n            console.log('triggered')\r\n            fd.append(\"formFile\", data.formFile, data.formFile.name);\r\n        }\r\n\r\n\r\n        if (data.PrerequisiteId) {\r\n            fd.append(\"PrerequisiteId\", `{${data.PrerequisiteId}}`)\r\n            console.log('triggered')\r\n        }\r\n\r\n        for (var pair of fd.entries()) {\r\n            console.log(pair[0] + ', ' + pair[1]);\r\n        }\r\n        apiTraining.putTraining(fd).then(result => {\r\n            alert(`${data.Training_Title} is updated`);\r\n        }).catch(e => console.log(e.message));\r\n        props.closeModal()\r\n    }\r\n\r\n    const [trainingList, setTrainingList] = useState([])\r\n    const getTrainingList = () => {\r\n        apiTraining.getTrainingList().then(result => {\r\n            setTrainingList(result.data)\r\n        }).catch(e => {\r\n            console.log(e)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getTrainingList()\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"add-new-training-modal\">\r\n            \r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}