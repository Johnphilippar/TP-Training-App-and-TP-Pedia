{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JPPAR\\\\Desktop\\\\React\\\\teleperformance\\\\tp-pedia\\\\owl-trainings-schedule\\\\src\\\\views\\\\TrainingsComponent.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport './TrainingsComponent.scss';\nimport image from '../image/tobio.jpg';\nimport Modal from 'react-modal';\nimport { getTraining, getTrainingList, postTraining } from '../API/trainingAPI';\nimport HeroComponent from '../components/TrainingFeatureComponents/HeroComponent'; // import ScheduleListComponent from '../components/TrainingFeatureComponents/ScheduleListComponent';\n\nimport config from '../../package.json';\nimport FormNewTrainingComponent from '../components/training/FormNewTrainingComponent';\nModal.setAppElement('#root');\nexport default function Trainings() {\n  const [trainingDetailsData, setTrainingDetailsData] = useState([{\n    Details: {},\n    Prerequisite: [],\n    schedules: []\n  }]);\n  const [arrayIndex, setArrayIndex] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [addScheduleModal, setAddScheduleModal] = useState(false); // const [editTrainingModal, setEditTrainingModal] = useState(false)\n\n  const getTrainingData = () => {\n    getTraining().then(results => {\n      setTrainingDetailsData(results.data);\n      console.log(results.data);\n    }).catch(e => {\n      console.log(e);\n    });\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getTrainingData();\n  }, []);\n\n  const trainingItemClick = index => {\n    setArrayIndex(index);\n  };\n\n  const [addTrainingModal, setAddTrainingModal] = useState(false);\n\n  const closeModal = () => {\n    setAddTrainingModal(false);\n  };\n\n  if (loading) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"training-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"Trainings\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"border-btm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"training-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"trainings-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"custom-add-button\",\n    onClick: () => setAddTrainingModal(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, \"Click here to add new training\"), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: addTrainingModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormNewTrainingComponent, {\n    close: closeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-trainings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }, trainingDetailsData && trainingDetailsData.map((obj, index) => /*#__PURE__*/React.createElement(\"li\", {\n    className: trainingDetailsData[arrayIndex].Details.ID == obj.Details.ID ? \"li-active\" : \"\",\n    key: index,\n    onClick: () => trainingItemClick(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: config.configuration.TRAINING_IMAGE_PATH + obj.Details.TRAINING_IMAGE,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 49\n    }\n  }, obj.Details.TRAINING_TITLE), /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 49\n    }\n  }, \"obj.Details.TRAINING_DETAILS\")))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"information-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(HeroComponent, {\n    details: trainingDetailsData[arrayIndex],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/JPPAR/Desktop/React/teleperformance/tp-pedia/owl-trainings-schedule/src/views/TrainingsComponent.jsx"],"names":["React","useState","useEffect","image","Modal","getTraining","getTrainingList","postTraining","HeroComponent","config","FormNewTrainingComponent","setAppElement","Trainings","trainingDetailsData","setTrainingDetailsData","Details","Prerequisite","schedules","arrayIndex","setArrayIndex","loading","setLoading","addScheduleModal","setAddScheduleModal","getTrainingData","then","results","data","console","log","catch","e","trainingItemClick","index","addTrainingModal","setAddTrainingModal","closeModal","map","obj","ID","configuration","TRAINING_IMAGE_PATH","TRAINING_IMAGE","TRAINING_TITLE"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,2BAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,YAAvC,QAA2D,oBAA3D;AACA,OAAOC,aAAP,MAA0B,uDAA1B,C,CACA;;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,wBAAP,MAAqC,iDAArC;AACAN,KAAK,CAACO,aAAN,CAAoB,OAApB;AAEA,eAAe,SAASC,SAAT,GAAqB;AAEhC,QAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IAAgDb,QAAQ,CAAC,CAC3D;AACIc,IAAAA,OAAO,EAAE,EADb;AAEIC,IAAAA,YAAY,EAAE,EAFlB;AAGIC,IAAAA,SAAS,EAAE;AAHf,GAD2D,CAAD,CAA9D;AAQA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BlB,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACmB,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAAC,IAAD,CAAtC;AAEA,QAAM,CAACqB,gBAAD,EAAmBC,mBAAnB,IAA0CtB,QAAQ,CAAC,KAAD,CAAxD,CAbgC,CAchC;;AAEA,QAAMuB,eAAe,GAAG,MAAM;AAC1BnB,IAAAA,WAAW,GAAGoB,IAAd,CAAmBC,OAAO,IAAI;AAC1BZ,MAAAA,sBAAsB,CAACY,OAAO,CAACC,IAAT,CAAtB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,OAAO,CAACC,IAApB;AACH,KAHD,EAGGG,KAHH,CAGSC,CAAC,IAAI;AACVH,MAAAA,OAAO,CAACC,GAAR,CAAYE,CAAZ;AACH,KALD;AAMAV,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GARD;;AAUAnB,EAAAA,SAAS,CAAC,MAAM;AACZsB,IAAAA,eAAe;AAClB,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMQ,iBAAiB,GAAIC,KAAD,IAAW;AACjCd,IAAAA,aAAa,CAACc,KAAD,CAAb;AACH,GAFD;;AAIA,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0ClC,QAAQ,CAAC,KAAD,CAAxD;;AAEA,QAAMmC,UAAU,GAAG,MAAM;AACrBD,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACH,GAFD;;AAIA,MAAIf,OAAJ,EAAa;AACT,WAAO,IAAP;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,SAAS,EAAC,mBAAlB;AAAsC,IAAA,OAAO,EAAE,MAAMe,mBAAmB,CAAC,IAAD,CAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADJ,eAEI,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAED,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,wBAAD;AAA0B,IAAA,KAAK,EAAEE,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,eAMI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQvB,mBAAmB,IAAIA,mBAAmB,CAACwB,GAApB,CAAwB,CAACC,GAAD,EAAML,KAAN,kBAE3C;AAAI,IAAA,SAAS,EAAEpB,mBAAmB,CAACK,UAAD,CAAnB,CAAgCH,OAAhC,CAAwCwB,EAAxC,IAA8CD,GAAG,CAACvB,OAAJ,CAAYwB,EAA1D,GAA+D,WAA/D,GAA6E,EAA5F;AAAgG,IAAA,GAAG,EAAEN,KAArG;AAA4G,IAAA,OAAO,EAAE,MAAMD,iBAAiB,CAACC,KAAD,CAA5I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAExB,MAAM,CAAC+B,aAAP,CAAqBC,mBAArB,GAA2CH,GAAG,CAACvB,OAAJ,CAAY2B,cAAjE;AAAiF,IAAA,GAAG,EAAC,EAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQJ,GAAG,CAACvB,OAAJ,CAAY4B,cAApB,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAFJ,CADJ,CAFJ,CAFmB,CAF/B,CADJ,CANJ,CADJ,eA0BI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAE9B,mBAAmB,CAACK,UAAD,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CA1BJ,CAHJ,CADJ;AAyCH","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './TrainingsComponent.scss';\r\nimport image from '../image/tobio.jpg';\r\nimport Modal from 'react-modal';\r\nimport { getTraining, getTrainingList, postTraining } from '../API/trainingAPI';\r\nimport HeroComponent from '../components/TrainingFeatureComponents/HeroComponent';\r\n// import ScheduleListComponent from '../components/TrainingFeatureComponents/ScheduleListComponent';\r\nimport config from '../../package.json'\r\nimport FormNewTrainingComponent from '../components/training/FormNewTrainingComponent';\r\nModal.setAppElement('#root');\r\n\r\nexport default function Trainings() {\r\n\r\n    const [trainingDetailsData, setTrainingDetailsData] = useState([\r\n        {\r\n            Details: {},\r\n            Prerequisite: [],\r\n            schedules: []\r\n        }\r\n    ]);\r\n\r\n    const [arrayIndex, setArrayIndex] = useState(0);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const [addScheduleModal, setAddScheduleModal] = useState(false)\r\n    // const [editTrainingModal, setEditTrainingModal] = useState(false)\r\n\r\n    const getTrainingData = () => {\r\n        getTraining().then(results => {\r\n            setTrainingDetailsData(results.data)\r\n            console.log(results.data)\r\n        }).catch(e => {\r\n            console.log(e)\r\n        })\r\n        setLoading(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getTrainingData()\r\n    }, [])\r\n\r\n    const trainingItemClick = (index) => {\r\n        setArrayIndex(index);\r\n    };\r\n\r\n    const [addTrainingModal, setAddTrainingModal] = useState(false)\r\n\r\n    const closeModal = () => {\r\n        setAddTrainingModal(false);\r\n    }\r\n\r\n    if (loading) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"training-page\">\r\n            <h1>Trainings</h1>\r\n            <div className=\"border-btm\"></div>\r\n            <div className=\"training-body\">\r\n                <div className=\"trainings-section\">\r\n                    <button className=\"custom-add-button\" onClick={() => setAddTrainingModal(true)}>Click here to add new training</button>\r\n                    <Modal isOpen={addTrainingModal}>\r\n                        <FormNewTrainingComponent close={closeModal} />\r\n                    </Modal>\r\n\r\n                    <div className=\"list-trainings\">\r\n                        <ul>\r\n                            {\r\n                                trainingDetailsData && trainingDetailsData.map((obj, index) =>\r\n\r\n                                    <li className={trainingDetailsData[arrayIndex].Details.ID == obj.Details.ID ? \"li-active\" : \"\"} key={index} onClick={() => trainingItemClick(index)}>\r\n                                        <img src={config.configuration.TRAINING_IMAGE_PATH + obj.Details.TRAINING_IMAGE} alt=\"\" />\r\n                                        <div className=\"info\">\r\n                                            <div>\r\n                                                <label>{obj.Details.TRAINING_TITLE}</label>\r\n                                                <small>obj.Details.TRAINING_DETAILS</small>\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                )\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className=\"information-section\">\r\n\r\n                    <HeroComponent details={trainingDetailsData[arrayIndex]} />\r\n\r\n                    {/* <div className=\"trainings-body-main-schedule\">\r\n                        <ScheduleListComponent schedules={trainingDetailsData[arrayIndex]} />\r\n                    </div> */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}